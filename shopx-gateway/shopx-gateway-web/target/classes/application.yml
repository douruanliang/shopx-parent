spring:
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]': # 匹配所有请求
              allowedOrigins: "*" #跨域处理 允许所有的域
              allowedMethods: # 支持的方法
                - GET
                - POST
                - PUT
                - DELETE
      routes:
            - id: shopx_user_auth_route
              uri: lb://user-auth
              predicates:
              - Path=/api/user/login/**
              filters:
              - StripPrefix=1

            - id: shopx_goods_route
              uri: lb://goods
              predicates:
              - Path=/api/goods/**,/api/brand/**,/api/categoryBrand**
              filters:
              - StripPrefix=1
            #用户微服务
            - id: shopx_user_route
              # lb: 使用LoadBalancerClient 实现负载均衡 + 微服务的名称
              uri: lb://user
              #路由断言，路由规则配置
              predicates:
              - Path=/api/user/**,/api/user/login/*,/api/address/**,/api/areas/**,/api/cities/**,/api/provinces/**
              filters:
              #将请求路径中的第一个路径去掉 请求路径以/区分，一个/代表一个路径
              - StripPrefix=1
            #订单微服务
            - id: shopx_order_route
              uri: lb://order
              predicates:
              - Path=/api/cart/**,/api/categoryReport/**,/api/orderConfig/**,/api/order/**,/api/orderItem/**,/api/orderLog/**,/api/preferential/**,/api/returnCause/**,/api/returnOrder/**,/api/returnOrderItem/**
              filters:
              - StripPrefix=1
                # 局部限流过滤器
                #- name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
                # args:
                #key-resolver: "#{@ipKeyResolver}"
                # 每秒钟只允许有1个请求
                #redis-rate-limiter.replenishRate: 1
                # 允许并发有4个请求【宽限的个数】
                #redis-rate-limiter.burstCapacity: 4
  application:
    name: gateway-web
  #Redis配置
  redis:
    host: 127.0.0.1
    port: 6379

server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true